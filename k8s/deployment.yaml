apiVersion: apps/v1
kind: Deployment
metadata:
  name: "testapp"
  namespace: myns
  labels:
    app: testapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testapp
  template:
    metadata:
      namespace: myns
      labels:
        app: testapp
        service: testservice
      annotations:
        prometheus_io_scrape: "true"
        prometheus_io_port: "8080"
    spec:
      ## Try to not run in the same availability zone
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                 - key: app
                   operator: In
                   values:
                    - testapp
              topologyKey: failure-domain.beta.kubernetes.io/zone
          - weight: 90
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                 - key: app
                   operator: In
                   values:
                    - testapp
              topologyKey: kubernetes.io/hostname
#      securityContext:
#        runAsUser: 1000
#       runAsGroup: 1000
#       fsGroup: 1000
      containers:
      - name: "nginx"
        image: myapp
        ports:
          - containerPort: 80
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 1
            memory: 500Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
          - name: DB_HOSTNAME
            value: "mysql"
          - name: DB_HOSTNAME_RO
            value: "mysql-ro"
          - name: DB_PORT
            value: "3306"            
          - name: DB_NAME
            value: "usermgmt"            
          - name: DB_USERNAME
            value: "dbadmin"        # RDS DB Username is dbadmin     
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-db-password
                key: db-password           
        volumeMounts:
        - name: logs
          mountPath: "/shared/logs/myapp"
          readOnly: true
      volumes:
      - name: logs # This is for logstash
        hostPath:
          path: "/shared/logs/myapp"
          type: DirectoryOrCreate
